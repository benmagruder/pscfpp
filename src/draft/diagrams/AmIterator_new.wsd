@startuml

namespace Pscf {
   abstract class AbstractSystem
   abstract class Iterator<T>
   class AmIterator<T>
   abstract class IteratorMediator<T>
   abstract class AmStrategy<T>
}

namespace Pspc {
   class System<D>
   class IteratorFactory<D>
   class AmStrategyCPU
   class IteratorMediatorCPU<D>
}

namespace Pspg {
   class System<D>
   class IteratorFactory<D>
   class AmStrategyCUDA
   class IteratorMediatorCUDA<D>
}

Pscf.AmStrategy : + AmStrategy() {};
Pscf.AmStrategy : + virtual ~AmStrategy() {};       
Pscf.AmStrategy : + virtual findNorm()
Pscf.AmStrategy : + virtual findMaxAbs()
Pscf.AmStrategy : + virtual updateBasis()
Pscf.AmStrategy : + virtual computeUDotProd()
Pscf.AmStrategy : + virtual computeVDotProd()
Pscf.AmStrategy : + virtual updateU()
Pscf.AmStrategy : + virtual updateV()
Pscf.AmStrategy : + virtual setEqual()
Pscf.AmStrategy : + virtual addHistories()
Pscf.AmStrategy : + virtual addPredictedError()

Pscf.IteratorMediator : IteratorMediator() {};
Pscf.IteratorMediator : virtual ~IteratorMediator() {}; 
Pscf.IteratorMediator : virtual setIterator()
Pscf.IteratorMediator : virtual setup()
Pscf.IteratorMediator : virtual solve()
Pscf.IteratorMediator : virtual hasInitialGuess() 
Pscf.IteratorMediator : virtual nElements()
Pscf.IteratorMediator : virtual getCurrent()
Pscf.IteratorMediator : virtual evaluate()
Pscf.IteratorMediator : virtual getResidual()
Pscf.IteratorMediator : virtual update()

Pscf.IteratorMediator : - Iterator* iter_
Pscf.IteratorMediator : - AbstractSystem* sys_

Pspc.System : - IteratorMediatorCPU<D>* iterMed_
Pspg.System : - IteratorMediatorCUDA<D>* iterMed_


Pscf.Iterator : + Iterator(IteratorMediator& iterMed)
Pscf.Iterator : # IteratorMediator& iterMed()
Pscf.Iterator : - IteratorMediator* iterMed_

Pscf.AmIterator : + AmIterator(IteratorMediator<T>& iterMed, AmStrategy<T>& strategy)
Pscf.AmIterator : AmStrategy<T>* strategy_



' Inheritance and subclassing 
Util.ParamComposite <|-- Pscf.AbstractSystem
Pscf.Iterator --|> Util.ParamComposite
Pscf.AbstractSystem <|--- Pspc.System
Pscf.AbstractSystem <|--- Pspg.System
Pscf.Iterator <|-- Pscf.AmIterator
Pscf.IteratorMediator <|-- Pspc.IteratorMediatorCPU : T = DArray<double>
Pscf.AmStrategy <|-- Pspc.AmStrategyCPU : T = DArray<double>
' Pscf.IteratorMediator <|-- Pspg.IteratorMediatorCUDA : T = DField<cudaReal>
' Pscf.AmStrategy <|-- Pspg.AmStrategyCUDA : T = DField<cudaReal>
' Pspg.IteratorMediatorCUDA ---|> Pscf.IteratorMediator: T = DField<cudaReal>
' Pspg.AmStrategyCUDA ---|> Pscf.AmStrategy : T = DField<cudaReal>

' References
Pscf.Iterator -> Pscf.IteratorMediator
Pscf.IteratorMediator -> Pscf.AbstractSystem

' Composition
Pscf.IteratorMediator *-> Pscf.Iterator
Pscf.AmIterator *-> Pscf.AmStrategy
Pspc.System *-> Pspc.IteratorMediatorCPU
Pspc.System *-> Pspc.IteratorFactory
Pspg.System *-> Pspg.IteratorMediatorCUDA
Pspg.IteratorFactory <-* Pspg.System 

@enduml