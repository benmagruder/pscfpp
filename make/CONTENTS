The files in this directory contain fragments of the configuration files
that are installed by the configure script in the src/, and bld/ 
directories. 

Files in the make/config directory contain source files and source file
fragments for files that are installed by the pscfpp/configure script. 
These include files that contain fragments of the main config.mk 
configuration file that are installed in the bld/ and src/ directories and 
copies of namespace level config.mk files that are installed in the 
namespace level subdirectories of each build directory. Users should 
generally not modify files in this directory. 

The make/compiler directory contains a set of compiler configuration files
that each contain a set of makefile definitions appropriate to a particular
combination of compiler and operating system environment. The configure 
script incorporates the contents of one of these files into the main 
config.mk file in each build directory (i.e., in bld/ and src/). When the 
configure script is run with no argument, it attempts to automatically 
identify the file that is appropriate for the system environment. In most 
cases, the file "make/compiler/linux-default" is used. If the script 
detects that the environment is a Mac using the homebrew package manager 
and an Apple silicon CPU (m1, m2, etc.), it will instead use 
"make/compiler/mac-si-homebrew". 

The name of a specific file in the make/compiler directory can be passed to 
the configure script as a command line argument to manually choose which 
file to use.  For example, one would invoke "./configure mac-si-homebrew" 
to manually instruct the configure script to use the mac-si-homebrew file. 

Users may create new files in the make/compiler directory to save 
specialized settings required to compile in their own environment. Such a 
file can be created by making a copy of one of the existing files (e.g., 
make/compiler/linux-default or make/compiler/mac-si-homebrew) and then 
modifying values of makefile variables that specify paths or compiler 
options. For example, a user could create a file named make/compiler/local, 
and then use during setup by invoking "./configure local" from the pscfpp/ 
root directory.  Files created by users in the make/compiler directory are 
not erased when "make clean" or "make veryclean" is invoked from the root 
pscfpp/ directory. 
