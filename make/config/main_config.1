#=========================================================================
# file: $(BLD_DIR)/config.mk
#
# This makefile fragment is the main configuration file for the pscf
# build system.  A copy of this file is included by all other makefiles. 
# This file is installed by the "configure" script, and may be edited by
# the user if needed. Copies of this file are installed in the src/
# directory and in the bld/ directory. The copy in the src/ directory
# controls in-source compilation, in which intermediate files are created
# in the root directory tree, and the copy in the bld/ directory controls
# out-of-source compilation in which these files are installed in the bld/
# directory.
#
# This file contains definitions of several types of makefile variables:
# 
#  - Variables ROOT_DIR, SRC_DIR, BLD_DIR, BIN_DIR and DAT_DIR define
#    absolute paths for the pscfpp/ root directory and some of its 
#    subdirectories.
#
#  - A variable UTIL_DEBUG that, if defined, enables compilation of 
#    debugging version of all source files with additional sanity checks.
#
#  - A variable PSCF_CUDA that, if defined, enables conditional
#    compilation and linking of CUDA code throughout the Pscf namespace.
#    This is undefined (commented out) by default, and should only be
#    defined on machines that can compile and run CUDA code.
#
#  - Variables that control the command name by which the C++ and C++/CUDA
#    compilers are invoked, and command line options passed to both
#    compilers.
# 
#  - Variable MAKEDEP and MAKEDEP_CUDA that give names for scripts used
#    to automatically generate dependency (*.d) files.
#
#=========================================================================
# Variables that define absolute directory paths
#
# In the config.mk file installed in each build directory (src/ or bld/), 
# correct values of these variables should have been set by the configure 
# script, and should not need to be modified by users.

# Absolute path to the pscfpp/ root directory
ROOT_DIR=PWD

# Path to the build directory (location for intermediate generated files)
# This should be the directory that contains this config.mk file
BLD_DIR=$(ROOT_DIR)/=OWD

# Path to the source directory (contains C++ source code files)
SRC_DIR=$(ROOT_DIR)/src

# Installation directory for binary executable program files
BIN_DIR=$(ROOT_DIR)/bin

# Directory for shared permanent (read-only) data used by programs.
DAT_DIR=$(ROOT_DIR)/data

#======================================================================
# Conditional compilation of debugging.

# Defining UTIL_DEBUG enables a variety of extra sanity checks (e.g.,
# bounds checking on arrays), at some cost in speed. By default, debugging 
# is disabled (commented out).
#UTIL_DEBUG=1

# Note: The setopts script may be used to uncomment or comment out the
# above definition UTIL_DEBUG from the command line To do so, before
# compiling, enter "./setopts -d1" to enable debugging (uncomment) 
# or "./setopts -d0" to disable debugging (comment out).
#
#======================================================================
# Conditional compilation of CUDA code
 
# Defining PSCF_CUDA enables compilation and linking of CUDA code.
# By default, CUDA compilation is disabled (commented out).
#PSCF_CUDA=1
 
# Note: The setopts script may be used to uncomment or comment out the
# above definition PSCF_CUDA from the command line To do so, before
# compiling, enter "./setops -c1" to enable CUDA (uncomment) or
# "./setopts -c0" to disable CUDA (comment out).
#
#======================================================================
# Compiler configuration variables.
#
# The following block of variable definitions is initialized by the
# configure script by inserting the contents of a compiler configuration 
# file found in the make/compiler directory.  If the configure script is 
# invoked with no argument, the file "make/compiler/default" is used by 
# default.  Users may add files to the make/compiler directory to store 
# customized settings. If the configure script is invoked with a filename
# argument (e.g., "./configure local"), the file in the make/compiler
# directory with the specified name (e.g., make/given/local) is used as
# the compiler configuration file rather than make/compiler/default. 
#
# Variables defined in this block define the names of the commands used
# to invoke compilers and linkers when compiling and linking files, some
# of the command line options passed to the compiler, and search paths
# for header files and libraries files for required external libraries.
# See the section of this file entitled "Makefile Patterns and Recipes" 
# below for a discussion of how these variables are used.
#
