/*! \page scft_imposed_fields_page Geometric Confinement and External Fields

 \ref scft_groups_page  (Prev) &nbsp; &nbsp; &nbsp; &nbsp; 
 \ref scft_visualize_page   (Next) 
<BR>

# Masks and external fields

The iterator in pscf_pc allows users to define a "mask" field that imposes 
geometric confinement within the unit cell by modifying the 
incompressibility constraint. A mask field is a dimensionless function of 
position, denoted here by \f$ m({\bf r}) \f$, that has a value very close 
to 1 throughout a region to which the polymer material is confined and a 
value very close to 0 throughout a region from which the material is being 
excluded. The incompressibility constraint for a system that is subjected 
to a mask is modified so as to require that
\f[
   v \sum_{\alpha=1} c_\alpha({\bf r}) = m({\bf r})
\f]
at every point in the system, where \f$ m({\bf r}) \f$ is the mask field,
\f$ c_{\alpha}({\bf r}) \f$ is the number concentration of monomers of type
\f$ \alpha \f$ at point \f$ {\bf r} \f$, \f$ v \f$ is the monomer reference
volume, and the summation is over all distinct monomer types. Introduction
of a mask provides a simple way to impose geometric confinement within a
program that is designed for periodic systems. The mask can have any 
functional form as long as it satisfies the periodic boundary condition and
the space-group symmetry of the system.

The iterator in pscf_pc also allows users to define an external chemical 
potential field felt by the different monomer species in the system. When 
nonzero external fields have been set, the self-consistent field equations 
become equations of the form
\f[
   w_{\alpha}({\bf r})
   = \sum_{\beta} \chi_{\alpha\beta}\phi_{\beta}({\bf r})
   + \xi({\bf r}) + h_{\alpha}({\bf r})
\f]
for each monomer type \f$ \alpha \f$, in which \f$ h_{\alpha}({\bf r}) \f$
is the external field for monomers of type \f$ \alpha \f$,
\f$ \xi ({\bf r}) \f$ is the Lagrange multiplier local pressure field that
imposes incompressibility, and \f$ \chi_{\alpha\beta} \f$ is the binary
Flory-Huggins interaction parameter for  monomers of types \f$ \alpha \f$
and \f$ \beta \f$. These fields can also assume any form as long as they
satisfy the periodic boundary condition and the space-group symmetry of 
the calculation.

Collectively, we refer to masks and external potential fields as "imposed 
fields" for a given SCFT calculation. These fields can be defined in a 
field file by the user and included in the calculation using the commands
outlined on the \ref scft_command_pc_page "commands" page, e.g. 
READ_W_BASIS and READ_MASK_BASIS. This method for including imposed fields
in an SCFT calculation allows for maximal flexibility in the functional 
form of the imposed fields, since the fields are entirely user-defined.

However, it is often more convenient for the imposed fields to be defined
internally within the software. For instance, many parameter sweeps require
that the imposed fields be updated at every step along the sweep, which is
not possible when the fields are externally defined. Therefore, a platform
has been developed in pscf_pc for certain common types of imposed fields to 
be defined internally, in the form of an ImposedFieldsGenerator object.

# ImposedFieldsGenerator objects

The ImposedFieldsGenerator interface was designed so that imposed fields 
with specific functional forms can be constructed based on only a few 
numeric input parameters, which are provided by the user in the parameter 
file. The imposed fields will then automatically be updated when necessary
such that the fields always satisfy the correct functional form, even if 
the unit cell size changes or other parameters are modified that affect the 
imposed fields. An ImposedFieldsGenerator can generate a mask, a set of 
external fields, or both. The parameters that define the imposed fields can 
also be modified via a parameter sweep in some cases.

The space-group symmetry of the calculation must be chosen carefully so 
that the imposed fields generated by the ImposedFieldsGenerator will not 
violate the symmetry constraints of the space group. The set of allowed 
space groups will vary depending on the type of imposed fields. An error 
will be thrown if the user defines an imposed field that will violate the 
space group of the calculation. The space group that best describes a given 
calculation is that which contains every symmetry operation shared by the 
mask, the external fields, and the polymer morphology itself; this is 
typically a lower-symmetry space group than that of the bulk polymer 
morphology in the absence of any imposed fields.

An ImposedFieldsGenerator object is created by an optional block of the 
parameter file inside of the Iterator block, after all other Iterator 
parameters have been read. The first parameter inside of this 
ImposedFieldsGenerator block is "type". The software uses this "type" 
keyword to determine which imposed fields should be generated, what their 
functional form should be, and what parameters are necessary to define the 
imposed fields. Therefore, the implementation of the ImposedFieldsGenerator 
feature is entirely different depending on what keyword is provided as the 
"type" parameter. Below the "type" parameter, all other necessary parameters 
must be provided in the ImposedFieldsGenerator block for that "type". An 
example is provided below for the "film" type, which has five required input 
parameters:
\code
Iterator{
  epsilon      1e-6
  maxItr       100
  maxHist      50
  isFlexible   1
  ImposedFieldsGenerator{
    type         film 
    normalVecId  2
    interfaceThickness 0.2
    excludedThickness  0.4
    chiBottom[
                       0
                       10
    ]
    chiTop[
                       0
                       0
    ]
  }
}
\endcode

Currently, the only "type" parameter that is accepted is "film", which 
imposes both a mask and an external field to model thin-film confinement. 
The "film" type of ImposedFieldsGenerator is described in detail on the 
\ref scft_thin_films_page "Thin Films" page. 

# Modified free energy calculation

In the presence of imposed fields, it is necessary to modify the free 
energy calculation to account for the fields. The free energy per monomer 
reference volume \f$ \tilde{f} \f$ is defined to be 
\f[
   \tilde{f} = \tilde{f}_{\rm id} + \tilde{f}_{\rm int} + \tilde{f}_{\rm ext}
\f]
where
\f{eqnarray*}
    \tilde{f}_{\rm id}
    & = & \sum_{i=0}^{P+S-1} \frac{\overline{\phi}_{i}}{L_{i}}
    \left [ \ln ( \overline{\phi}_{i} / Q_{i} ) - 1 \right ]
     - \frac{1}{\overline{m}V}
       \sum_{\alpha=0}^{C-1}
       \int \! d\textbf{r} \;
       w_{\alpha}(\textbf{r})
      \phi_{\alpha}(\textbf{r}) \\
    \tilde{f}_{\rm int}
    & = &  \frac{1}{2V} \sum_{\alpha, \beta =0}^{C-1}
    \chi_{\alpha\beta} \int \! d\textbf{r} \;
    \phi_{\alpha}(\textbf{r}) \phi_{\beta}(\textbf{r}) \\
    \tilde{f}_{\rm ext} 
    & = &  \frac{1}{\overline{m}V} \sum_{\alpha=0}^{C-1}
    \int \! d\textbf{r} \;
       h_{\alpha}(\textbf{r})
      \phi_{\alpha}(\textbf{r})
\f}
There are two changes in the above equations relative to those that describe 
systems in the absence of imposed fields (see \ref scft_propagator_thermo_sec 
"here"). First, an additional term is added, \f$ \tilde{f}_{\rm ext} \f$, 
which contains the free energy arising from monomer species interacting with 
their respective external potential fields. This property is output along 
with the \ref scft_thermo_page "other thermodynamic properties" as "fExt" 
for any calculation that contains an external field. The second change is 
that we use \f$ \overline{m}V \f$ rather than \f$ V \f$ as the volume by 
which the integrals are normalized. \f$ \overline{m} \f$ is defined as the 
average value of the mask function \f$ m({\bf r}) \f$ over the entire unit 
cell, representing the volume fraction of the unit cell that is occupied by 
polymer. \f$ \overline{m}V \f$ is therefore the volume available to the 
polymers in the system, and is the volume that is relevant to the polymer 
thermodynamic properties.

<BR>
 \ref scft_groups_page  (Prev) &nbsp; &nbsp; &nbsp; &nbsp; 
 \ref scft_page          (Up) &nbsp; &nbsp; &nbsp; &nbsp; 
 \ref scft_visualize_page   (Next) 
*/
