/*! \page psfts_analysis_page Data Analysis 

\ref psfts_param_page      (Prev)  &nbsp; &nbsp; &nbsp; &nbsp;
\ref psfts_command_page    (Next)
<BR>

\section psfts_analysis_overview_sec Overview

PSCF provides tools to allow users to analyze data in either of two 
methods. Physical quantities of interest can be computed and analyzed 
either:

   - During a simulation, "on the fly"

   - After a simulation, by postprocessing a field trajectory

To analyze and/or output data during a simlation, one must simply include
subblocks that list the desired data analysis within the AnalyzerManager
block of the parameter file used to initialize the simulation.

Postprocessing of a field trajectory involves two steps. First, one must use 
the SIMULATE command to perform a PS-FTS simulation in which the AnalyzerManager 
block includes an analyzer named TrajectoryWriter that periodically writes 
field configuration to a field trajectory file.  Later, one performs a separate 
calculation, which is usually initialized with a different parameter file, in 
which the ANALYZE command is used to order pscf_pc or pscf_pg to reads in and 
analyze each frame of the trajectory file created during the earlier 
simulation. 

In either mode of operation, the data analysis and IO operations that should
be performed are specified by the contents of the AnalyzerManager block of 
the parameter file that is used to initialize calculation performed using 
the pscf_pc or pscf_pg program. Both of these programs are thus designed to
be used both for simulation and postprocess data analysis. When postprocessing
is used, the original simulation and the postprocessing calculation are 
normally performed by separate calculations that are normally initialized 
by different parameter files that differ primarily in the contents of the
ManagerAnalyzer block.  In this case, the parameter file that is used to 
initialize the simulation must contain an analyzer that writes the field 
trajectory file, but may lack analyzers that perform other computations 
that will instead be performed via postprocessing.

The main advantage of postprocessing a trajectory file is it allows the 
same data to be analyzed repeatedly, thus allowing the the user to delay 
or revise decisions about what types of analysis might be useful. 
The main disadvantage of postprocessing is the amount of disk space required 
to store trajectories. Disk space limitations may limit the frequency with 
which users choose to write field configurations during a simulation, thus 
limiting the frequency with which physical observables may be sampled during 
postprocessing. Data analysis operations that benefit from very frequent 
sampling are thus natural candidates for analysis operations that might
profitably be performed during a simulation, rather than only during 
postprocessing.

\section psfts_analysis_analyzers_sec Analyzer Classes

The same set of "analyzer" classes are available for use either during a
simulation or during postprocessing of a trajectory file. All of the analyzer
classes that are provided with the current version of PSCF (v1.2) are listed 
below.  More details about the purpose of each class and the format of the 
corresponding paramet file block can be obtained by clicking on link in this 
list:
<ul>
  <li> \subpage rpc_StepLogger_page "StepLogger" </li>
  <li> \subpage rpc_TrajectoryWriter_page "TrajectoryWriter" </li>
  <li> \subpage rpc_HamiltonianAnalyzer_page "HamiltonianAnalyzer" </li>
  <li> \subpage rpc_BinaryStructureFactorGrid_page "BinaryStructureFactorGrid" </li>
  <li> \subpage rpc_ChiDerivative_page "ChiDerivative" </li>
  <li> \subpage rpc_ConcentrationDerivative_page "ConcentrationDerivative" </li>
  <li> \subpage rpc_PerturbationDerivative_page "PerturbationDerivative" </li>
  <li> \subpage rpc_MaxOrderParameter_page "MaxOrderParameter" </li>
  <li> \subpage rpc_FourthOrderParameter_page "FourthOrderParameter" </li>
  <li> \subpage rpc_ConcentrationWriter_page "ConcentrationWriter" </li>
</ul>
The first two of these classes are commonly used during a simulation run, but
would not normally be used during a postprocessing calculation.
The "StepLogger" class records the progress of a simulation by periodically 
writing the current number of BD or MC steps to a log file.
The TrajectoryWriter class periodically writes field configurations to a field
trajectory file, thus enabling postprocessing of the resulting file. 
The other classes perform data analysis operations that could be applied either
during a simulation or during postprocessing.

\section psfts_analysis_postprocessing_sec Postprocessing a Trajectory File

To be written

<BR>
\ref psfts_param_page   (Prev) &nbsp; &nbsp; &nbsp; &nbsp; 
\ref psfts_page           (Up)   &nbsp; &nbsp; &nbsp; &nbsp;
\ref psfts_command_page   (Next)

*/
