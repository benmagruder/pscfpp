/*! \page user_command_pc_page 3.5.2 Commands for pscf_pc (CPU)

 \ref user_command_fd_page     (Prev) &nbsp; &nbsp; &nbsp; &nbsp; 
 \ref user_command_pg_page (Next) 
<BR>

\section user_command_pc_field_sec Field File Formats

Many of the available commands for the pscf_pc programs cause the 
program to read and/or write a set of chemical potential (w) fields or 
monomer concentration (c) fields to or from file. Different commands 
read or write files in different formats.  These programs can read and 
write fields in any of the following three formats:

 - "basis" format contains real components of an expansion of the
    field using a real symmetry-adapted Fourier basis

 - "r-grid" format contains real field values on nodes of a regular 
    real-sapace grid

 - "k-grid" format contains complex components of a discrete Fourier 
   transform (DFT) of a real field

The "basis" and "r-grid" fromats are identical to corresponding formats
used by the Fortran PSCF program.  The k-grid format is not compatible
with that used by the Fortran program, because of differences in the 
way that FFTs are stored and indexed internally.

\section user_command_pc_scft_sec Example: SCFT Calculation

Here is a example of a simple command file for any of pscf_pc programs for
D-dimensionally periodic microstructures (i.e., for pscf_pc1, pscf_pc2, or 
pscf_pc3) for a calculation the performs a single SCFT calculation:
\code
READ_W_BASIS    in/w.bf
ITERATE         
WRITE_W_BASIS   out/w.bf
WRITE_C_BASIS   out/c.bf
WRITE_C_RGRID   out/c.rf
WRITE_PARAM     out/data
WRITE_THERMO    out/data
FINISH
\endcode
The command "READ_W_BASIS in/w.bf" instructs the program to read an 
initial guess for the chemical potentials fields from the file in/w.bf, 
which should contain the components of the fields as an expansion in 
a symmetry-adapted Fourier basis. The ITERATE command instructs the program
to iteratively solve the SCFT equations starting from this initial guess.  
The command "WRITE_W_BASIS out/w.bf" writes the resulting converged set of 
chemical potential fields to file out/w.bf in symmetry-adapted basis 
format. The command "WRITE_C_BASIS out/c.bf" writes the corresponding 
monomer volume fraction fields to the file out/c.bf in the same format, 
while "WRITE_C_RGRID out/c.rf" writes the volume fraction fields in r-grid 
format. The command "WRITE_PARAM out/data" writes a param file for the 
current system to a file. The following command, "WRITE_THERMO out/data", 
appends the thermodynamic properties of the converged solution to the end 
of out/data, which already contains the param file. The script stops 
execution when it encounters the FINISH command.

\section user_command_pc_sweep_sec Example: A Sweep

Here is an example of a command file to instead perform a sweep.
\code
READ_W_BASIS    in/w.bf
SWEEP
FINISH
\endcode
The command "READ_W_BASIS in/w.bf" instructs the program to read 
an initial guess for the chemical potentials fields at the initial 
state of the sweep (the state s=0) from the file in/w.bf. 
The SWEEP command actually executes a sweep operation, and is only
valid if the corresponding parameter file contains a Sweep block.

Note that this example does not contain any of the explicit output 
commands that were included in the example for a single SCFT 
calculation.  Adding an output command after a sweep would only 
output information about the last state in the sweep (i.e., the 
state s=1). This is unnecessary because information about the 
solution at each step in the sweep is instead normally output as 
part of the implementation of the sweep operation.

\section user_command_pc_h_mask_fields_sec External Fields and Masks

In pspc, users are also able to impose external (h) fields and masks 
on the unit cell of their calculation. Users can read in a set of 
external fields (one field per monomer species) from a file using 
the READ_H_BASIS and READ_H_RGRID commands, and can read in a mask 
field using READ_MASK_BASIS and READ_MASK_RGRID. 

An external field introduces an additional potential energy that 
either favors or disfavors the presence of a particular species at
each point in space. The external field contribution to free 
energy is merely the volume-normalized overlap integral of each 
species' concentration profile with its corresponding external 
field. The fields can be positive or negative.

A mask field imposes geometric confinement upon the system by 
modifying the incompressibility constraint. Incompressibility in a 
system with a mask is defined by the following equation:
\f[
   \sum_{\alpha=1}^{N_{\rm species}} \rho_\alpha({\bf r}) = 
   \rho_{\rm mask}({\bf r}) 
\f]
where the summation is over all distinct monomer species, 
<i>&rho;<sub>&alpha;</sub></i>(<b>r</b>) is the volume fraction of 
species <i>&alpha;</i> at position <b>r</b>, and 
<i>&rho;</i><sub>mask</sub>(<b>r</b>) is the mask field. So, if 
<i>&rho;</i><sub>mask</sub>(<b>r</b>) = 1, then position <b>r</b>
is occupied entirely by polymers, but if 
<i>&rho;</i><sub>mask</sub>(<b>r</b>) = 0 then there are no 
polymers at position <b>r</b>. This can be used, for example, to 
impose confinement between walls, in a cylindrical cavity, in a 
spherical pore, etc. Masks are the preferred method for geometric
confinement in our SCFT software because their use doesn't require  
any modifications of the boundary conditions; the unit cell is still
periodic in all directions, and the only modifications required to
impose a mask are applied to the iterator.

External fields and masks are both generated internally by the 
thin film feature described at \ref user_thin_films_page , and
the fields can be written to a file at any time using the 
additional mask and h field commands below.

\section user_command_pc_commands_sec Commands

The following table shows a list of available commands for the pscf_pc
programs:
<table>
  <tr> 
    <td> <b>command     </b> </td>
    <td> <b>parameter(s)</b> </td>
    <td> <b>description </b> </td>
  </tr>
  <tr> 
    <td> READ_W_BASIS </td>
    <td> filename [string] </td>
    <td> 
         Read w fields from file filename, in symmetry-adapted basis format
    </td>
  </tr>
  <tr> 
    <td> READ_W_RGRID </td>
    <td> filename [string] </td>
    <td> Read w fields from file filename, in real-space grid (r-grid) 
         format </td>
  </tr>
  <tr> 
    <td> READ_H_BASIS </td>
    <td> filename [string] </td>
    <td> Read external (h) fields from file filename, in symmetry-adapted
         basis format </td>
  </tr>
  <tr> 
    <td> READ_H_RGRID </td>
    <td> filename [string] </td>
    <td> Read external (h) fields from file filename, in real-space grid 
         (r-grid) format </td>
  </tr>
  <tr> 
    <td> READ_MASK_BASIS </td>
    <td> filename [string] </td>
    <td> Read a mask field from file filename, in symmetry-adapted
         basis format </td>
  </tr>
  <tr> 
    <td> READ_MASK_RGRID </td>
    <td> filename [string] </td>
    <td> Read a mask field from file filename, in real-space grid 
         (r-grid) format </td>
  </tr>
  <tr> 
    <td> COMPUTE </td>
    <td> </td>
    <td> Solve modified diffusion equation for the current w fields </td>
  </tr>
  <tr> 
    <td> ITERATE </td>
    <td> </td>
    <td> Iteratively solve SCFT equations (after initializing 
         w fields) </td>
  </tr>
  <tr> 
    <td> SWEEP </td>
    <td> </td>
    <td> Perform a sweep, as specified by the Sweep object in the param 
         file. </td>
  </tr>
  <tr> 
    <td> WRITE_W_BASIS </td>
    <td> filename [string] </td>
    <td> Write w fields to file filename, in symmetry-adapted basis format
         </td>
  </tr>
  <tr> 
    <td> WRITE_W_RGRID </td>
    <td> filename [string] </td>
    <td> Write w fields to file filename, in real-space grid (r-grid) format
         </td>
  </tr>
  <tr> 
    <td> WRITE_C_BASIS </td>
    <td> filename [string] </td>
    <td> Write monomer volume fraction fields (c fields) to file filename,
         in symmetry adapted basis format  </td>
  </tr>
  <tr> 
    <td> WRITE_C_RGRID </td>
    <td> filename [string] </td>
    <td> Write monomer volume fraction fields (c fields) to file filename,
         in r-grid format  </td>
  </tr>
  <tr> 
    <td> WRITE_C_BLOCK_RGRID </td>
    <td> filename [string] </td>
    <td> Write all individual block and solvent volume fraction fields 
         (c fields) to file filename, in r-grid format. The block c fields 
         are given in the order that the blocks appear in the param file, 
         followed by the solvent fields in the order that the solvents 
         appear in the param file </td>
  </tr>
  <tr> 
    <td> WRITE_H_BASIS </td>
    <td> filename [string] </td>
    <td> Write external potential fields (h fields) to file filename,
         in symmetry adapted basis format  </td>
  </tr>
  <tr> 
    <td> WRITE_H_RGRID </td>
    <td> filename [string] </td>
    <td> Write external potential fields (h fields) to file filename,
         in r-grid format  </td>
  </tr>
  <tr> 
    <td> WRITE_MASK_BASIS </td>
    <td> filename [string] </td>
    <td> Write mask field to file filename, in symmetry adapted basis 
         format  </td>
  </tr>
  <tr> 
    <td> WRITE_MASK_RGRID </td>
    <td> filename [string] </td>
    <td> Write mask field to file filename, in r-grid format  </td>
  </tr>
  <tr> 
    <td> WRITE_Q_SLICE </td>
    <td> filename [string], ip[int], ib[int], id[int], is[int] </td>
    <td> Write a "slice" of a propagator at fixed contour variable to file, 
         in real-space grid (r-grid) format. This command writes the slice
         at contour step is, for direction id (id=0 or 1), of block ib of
         polymer ip to file named filename.
         </td>
  </tr>
  <tr> 
    <td> WRITE_Q_TAIL </td>
    <td> filename [string], ip[int], ib[int], id[int] </td>
    <td> Write the final "slice" (or tail) of a propagator to a file, 
         in real-space grid (r-grid) format. This command writes the final
         slice of a propagor for direction id (id=0 or 1), of block ib of
         polymer ip to file named filename.
         </td>
  </tr>
  <tr> 
    <td> WRITE_Q </td>
    <td> filename [string], ip[int], ib[int], id[int] </td>
    <td> Write all "slice" of a specific propagator to a file, in 
         real-space grid (r-grid) format. This command writes a single
         file containing all slices for direction id (id=0 or 1), of 
         block ib of polymer ip to file named filename.
         </td>
  </tr>
  <tr> 
    <td> WRITE_Q_ALL </td>
    <td> basename [string] </td>
    <td> Write all propagators for both directions of all blocks of 
         all propagators to file, with each propagator in a different
         file, in real-space grid (r-grid) format. This file containing
         the propagator for polymer ip, block ib, and direction id has
         a name of the form (basename)_ip_ib_id.rf.
         </td>
  </tr>
  <tr> 
    <td> WRITE_PARAM </td>
    <td> filename [string] </td>
    <td> Write version of the param file associated with the current 
         that omits any Sweep block.  </td>
  </tr>
  <tr>
    <td> WRITE_THERMO </td>
    <td> filename [string] </td>
    <td> Write thermodynamic data (free energy, pressure, phi, and 
         mu for each species) to a file. If file already exists, this
         command will append thermodynamic data to the end of the 
         file, rather than overwriting the file. 
         </td>
  </tr> 
  <tr> 
    <td> WRITE_STARS </td>
    <td> filename [string] </td>
    <td> Write a list of all stars to file filename. </td>
  </tr>
  <tr> 
    <td> WRITE_WAVES </td>
    <td> filename [string] </td>
    <td> Write a list of all waves to file filename. </td>
  </tr>
  <tr> 
    <td> RGRID_TO_BASIS </td>
    <td> inFile [string], outFile [string] </td>
    <td> Read fields from file inFile in real-space grid (r-grid) format, 
         write to file outFile in symmetry-adapted basis format </td>
  </tr>
  <tr> 
    <td> BASIS_TO_RGRID </td>
    <td> inFile [string], outFile [string] </td>
    <td> Read fields from file inFile in symmetry-adapted basis format,
         write to file outFile in real-space grid (r-grid) format </td>
  </tr>
  <tr> 
    <td> KGRID_TO_RGRID </td>
    <td> inFile [string], outFile [string] </td>
    <td> Read fields from file inFile in discrete Fourier expansion 
         (k-grid) format, write to file outFile in r-grid format </td>
  </tr>
  <tr> 
    <td> RGRID_TO_KGRID </td>
    <td> inFile [string], outFile [string] </td>
    <td> Read fields from file inFile in real-space (r-grid) format,
         write to outFile in discrete Fourier expansion (k-grid) format
         </td>
  </tr>
  <tr> 
    <td> KGRID_TO_BASIS </td>
    <td> inFile [string], outFile [string] </td>
    <td> Read fields from file inFile in discrete Fourier expansion 
         (k-grid) format, write to file outFile in symmetry-adapted
         basis format </td>
  </tr>
  <tr> 
    <td> BASIS_TO_KGRID </td>
    <td> inFile [string], outFile [string] </td>
    <td> Read fields from file inFile in symmetry-adapted basis format,
         write to outFile in discrete Fourier expansion (k-grid) format
         </td>
  </tr>
  <tr> 
    <td> CHECK_RGRID_SYMMETRY </td>
    <td> inFile [string] </td>
    <td> Read fields from file inFile in real-space (r-grid) format,
         check whether the fields have symmetry that matches the
         space group specified in the param file.  </td>
  </tr>
  <tr> 
    <td> GUESS_W_FROM_C </td>
    <td> inFile [string], outFile [string] </td>
    <td> Read monomer concentration fields (c fields) in symmetry-adapted 
         basis format from file inFile, generate chemical potential 
         fields (w fields) using the concentration fields and chi values, 
         and write the potential fields to outFile in symmetry-adapted 
         basis format.  Also stores potential fields to be used by future 
         commands (e.g., ITERATE or SWEEP). </td>
  </tr>
</table>


 <BR>
 \ref user_command_fd_page   (Prev) &nbsp; &nbsp; &nbsp; &nbsp; 
 \ref user_command_page      (Up) &nbsp; &nbsp; &nbsp; &nbsp; 
 \ref user_command_pg_page   (Next) 
*/
