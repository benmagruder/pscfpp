/*! \page user_param_pc_page 3.3.7 Periodic Problems (pscf_fd)

\ref user_param_fd_page       (Prev) &nbsp; &nbsp; &nbsp; &nbsp; 
\ref user_command_page  (Next)
<BR>

An example of a parameter file for an pscf_fd program was given 
\ref user_param_example_page "previously" as an example of the syntax.
Please consult this example when looking at this discussion of the file
format.

\section user_param_fd_overview_sec Overview

The overall format for a pscf_fd parameter file is shown below in 
skeleton form:
\code
System{
  Mixture{ ...  }
  Interaction{ ...  }
  Domain{ ...  }
  Iterator#{ ... }
  Sweepr#*{ ... }
}
\endcode
The purposes of each of these top-level blocks have been discussed 
previously. Formats of the Mixture and Interaction blocks are the 
same for all PSCF programs, and have also been discussed previously. 
We thus focus below on the contents of the Domain, Iterator, and 
Sweep blocks.

\section user_param_pc_example_sec Example
An example of a parameter file for the program pscf_pc3D is shown below. 

\code
System{
  Mixture{
    nMonomer  2
    monomers[
              A   1.0  
              B   1.0 
    ]
    nPolymer  1
    Polymer{
      type    linear
      nBlock  2
      blocks[
              0  0.25
              1  0.75
      ]
      phi     1.0
    }
    ds   0.01
  }
  Interaction{
    chi(
          1   0   20.0
    )
  }
  Domain{
    unitCell         cubic       1.9254998725
    mesh             32  32  32
    groupName        I_m_-3_m
  }
  AmIterator{
    maxItr       100
    epsilon      1e-10
    maxHist      50
    isFlexible   1
  }
}
\endcode

\section user_param_pc_domain_sec Domain Block
The Domain block contains information required to describe both the
unit cell of the periodic structure and the regular mesh that is used
to discretize fields within each unit cell. 

An example of the format of this block is shown below:
\code
  Domain{
    unitCell     cubic   1.9254998725
    mesh         32  32  32
    groupName    I_m_-3_m
  }
\endcode
The unitCell, mesh and groupName parameter lines are discussed 
separately below.

\subsection user_param_pc_UnitCell_sub unitCell 

The line that begins with the label unitCell contains information
required to specify an initial value of the crystal unit cell. 
The data on this line contains a string that specifies the desired 
crystal system followed by one or more unit cell parameters. The
format is thus
\code
   unitCell   crystalSystem  param[0] ..... param[m]
\endcode
where m denotes the number of independent parameters required to
describe a unit cell of the specified crystal system. The allowed 
values of the crystalSystem string for a 3D structure currently 
include "cubic", "tetragonal" and "orthorhombic".  The cubic
crystal system used in the parameter file only requires one unit
cell parameter, which is the length of each axis of a simple 
cubic unit cell. 

Note: The unit cell parameter that is input in the parameter file 
is actually used only within an algorithm that constructs a set 
of symmetry adapted Fourier basis functions, and then discarded.
Values of initial guesses for initial unit cell dimensions of a 
system to which we want to apply self-consistent field theory are
obtained later by reading a file that contains an initial guess for 
the monomer chemical potential fields (w-fields), which also 
contains corresponding unit cell dimensions.

\subsection user_param_pc_Mesh_sub mesh 

The line that begins with the label "mesh" specifies the number 
of grid points along each direction of the uniform spatial mesh 
used to discretize an unit cell. The format is
\code
   mesh   N[0] .... N[D-1]
\endcode
where D is the dimension of space (i.e., the number of periodic
directions), and N[i] is the number of grid points along axis
number i, for i = 0,...,D-1.

\subsection user_param_pc_SpaceGroup_sub spaceGroup

The line that begins with the label "spaceGroup" specifies a text
label for the crystallographic space group for the desired structure. 
The format is
\code
  groupName string
\endcode
in which the value is a string that identifies the desired space 
group. 

Each of the allowed values of the groupName string corresponds to 
a modified version of the name of the space group, as listed in
the international tables of crystallogrphay. In the above example,
the groupName string I_m_-3_m is a modified form of the name 
\f$Im\overline{3}m\f$ for the space group for a BCC lattice. 
Identifiers for crystallographic space groups are discussed and
listed \ref user_groups_page "here". 

\section user_param_pc_AmIterator_section AmIterator Block

The \ref pspc_AmIteratorPage block provides parameters required by the Anderson-Mixing 
(AM) iterator that is used to solve the nonlinear self-consistent field 
(SCFT) equations.  An example of the format is shown below:
\code
  AmIterator{
    maxItr       100
    epsilon      1e-10
    maxHist      50
    errorType    relNormResid
    isFlexible   1
    scaleStress  10.0 
  }
\endcode

\subsection user_param_pc_maxItr_sub maxItr

Parameter maxItr is an integer whose value gives the maximum number 
of allowed iterations that will be attempted in the search for a
solution.

\subsection user_param_pc_epsilon_sub epsilon

Parameter epsilon gives the desired tolerance in the solution of the 
SCFT equations. The iterative loop exits if the maximum error drops 
below epsilon or if the number of iterations exceeds maxItr.

\subsection user_param_pc_maxHist_sub maxHist

The value of maxHist gives the number of previous trial solutions that
will be retained in memory by the Anderson-Mixing (AM) algorithm. The
AM algorithm uses knowledge of previous trials to guide the search for 
a solution, but only makes use of the previous maxHist trials when the
total number of iterations exceeds maxHist.

\subsection user_param_pc_errorType_sub errorType

The optional errorType parameter specifies the error criterion used for
determining termination. It can accept three different values: 
"maxResid", "normResid", and "relNormResid". By default, it is set to
to "relNormResid". The "maxResid" type uses the maximum element of the
vector of residuals to assess error. The "normResid" type uses the 
L2 norm of the vector of residuals to assess error. The "relNormResid"
error type uses the L2 norm of the vector of residuals divided by the
L2 norm of the vector of omega field elements, as in Stasiak and Matsen,
EPJE, 2011. 

\subsection user_param_pc_isFlexible_sub isFlexible

The optional isFlexible parameter is a boolean variable that can be used
to enable or disable optimization of the unit cell. Setting isFlexible = 0 
gives a rigid unit cell with dimensions that remain constant during
iteration. Setting isFlexible to 1 instructs the program to adjust 
the unit cell parameters during iteration so as to minimize the free
energy. If not set, isFlexible is set to 0 by default.

\subsection user_param_pc_scaleStress_sub scaleStress

The optional scaleStress parameter is the degree to which stress 
residuals should be weighted against self-consistent field residuals
when calculating the error and updating the fields. The default 
value of this parameter is scaleStress = 10.0. Setting scaleStress
only has an impact of isFlexible is set to 1.


<BR>
\ref user_param_fd_page  (Prev) &nbsp; &nbsp; &nbsp; &nbsp; 
\ref user_param_page     (Up)   &nbsp; &nbsp; &nbsp; &nbsp; 
\ref user_command_page   (Next)

*/
