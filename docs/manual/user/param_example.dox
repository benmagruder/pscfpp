/*! \page user_param_example_page 3.3.1 Example SCFT Parameter File

\ref user_param_page    (Up) &nbsp; &nbsp; &nbsp; &nbsp; 
\ref user_param_syntax_page (Next) 
<BR>

The different programs in the pscf package use parameter files with 
similar structure and syntax, with slight differences in some elements. 
It is useful to illustrate common elements by showing an example.

\section user_param_example_file Example File

Below, we show an example of a complete parameter file for a simple 1D 
SCFT calculation performed using a finite-difference discretization by
program pscf_fd:

\code
System{
  Mixture{
     nMonomer   2
     monomers[
                1.0  
                1.0 
     ]
     nPolymer   2
     Polymer{
        nBlock  2
        blocks[
                0   0.5
                1   0.5
        ]
        phi     0.6
     }
     Polymer{
        nBlock  1
        blocks[
                0   1.0
        ]
        phi     0.4
     }
     ds   0.01
  }
  Interaction{
     chi(
           0    1    10.0
     )
  }
  Domain{
     mode     planar
     xMin     0.0
     xMax     8.0
     nx       401
  }
  Iterator{
     epsilon   0.00000001
  }
}
\endcode

This particular example gives parameters for a calculation of a binary
mixture of a symmetric AB diblock copolymer with a homopolymer of type
A in a one-dimensional planar geometry. 

\section user_param_example_structure_sec File Structure

Before discussing details of the format for particular elements of this 
file, note the overall structure of the file:
This parameter file consists of a set of nested blocks that each begin 
and end with lines containing matching curly brackets, using a syntax 
similar to that of a C program. Each such parameter file block begins 
with a line that contains a label for the block (System, Mixture, etc.) 
followed immediately by an opening curly bracket "{". Each block ends 
with a matching closing curly bracket on a line by itself.  The skeleton 
structure of the main blocks within this example is show below:
\code
System{
  Mixture{
     ...
  }
  Interaction{
     ...
  }
  Domain{
     ...
  }
  Iterator{
     ...
  }
}
\endcode
The main block of a parameter file, which encloses all the data in 
the file, is always labelled "System". The purposes of each main 
subblock block of the main "System" block is briefly described below.
<ul>
<li>
Mixture: The Mixture block contains a description of the chemical
composition of a mixture of containing one or more polymer and solvent
molecular species. This includes a description of the structure of 
each polymer species and a specification of either the volume fraction 
phi or chemical mu of every species.  In this example, the Mixture 
block contains two Polymer{ ... } subblocks, each of which contains 
information about one of the two polymer species in the mixture.
</li>
<li>
Interaction: This block contains values for the Flory-Huggins chi 
parameters that describe interactions between different possible pairs 
of monomer types.
</li>
<li>
Domain: The domain block contains geometrical information about the 
spatial domain over which the SCFT equations should be solved and 
a description of the spatial discretization used to numerically solve 
the field equations.
</li>
<li>
Iterator: The Iterator block contains parameters required by an 
iteration algorithm that is used to iteratively solve the nonlinear 
SCFT equations. 
</li>
</ul>

The parameter files required to initialize a simple SCFT calculations 
performed using a pscf_pc or pscf_pg program for periodic microstructures
programs have a similar structure to that shown above, with analogous 
top level blocks that appear in the same order. Parameter files for all 
three types of program use exactly the same format for the Mixture and 
Interaction blocks, but differ in details of the format of the Domain 
block and the Iterator block.  The skeleton structure shown in this 
example is specfic to simple SCFT calculations - a somewhat different 
sequence of primary blocks may be required to initialize more complicated 
calculations, such as a simulation of a sequence of SCFT calculations 
along a line through parameter space (known as a "sweep").

Each block in a parameter file may contain a sequence of subblocks 
(each delimited by matching curly braces) and parameter entries. Each 
parameter entry starts with a label indicating the name of a parameter 
followed by information about the parameter value. 

Each parameter entry for a simple parameter, for which the value can 
be represented by a single number or string, appears on a single line 
containing a label that gives the parameter name followed by the 
parameter value. For examples of this, look for the nMonomer and nPolymer 
parameters within the Mixture block. 

Labels for some other parameters refer to names of 1D arrays of 2D 
matrices of values. In these cases, lists of elements of the array 
or matrix are delimited by either matched square brackets (for 
one-dimensional arrays) or by parentheses (as a syntax for specifying 
nonzero values of a matrix). Names of array-valued parameters are 
usually given as plural nouns. 

As an examples of a one-dimensional array-valued parameters, see the 
"monomers" parameter in the Mixture block. The value of each element 
in this array is a floating point number that is given on a line by
itself, which gives the statistical segment length of a particular 
type of monomer.

The value of the "chi" parameter within the Interaction block is a 
symmetric matrix or two-dimensional array. The distinct nonzero elements 
of the chi matrix are given in the parameter file using a syntax in which 
each such element is given on a line contain row index and a column index 
(defined using a zero-based convention), followed by the value of the 
matrix element. The resulting list of nonzero elements is enclosed by 
parentheses.

\section user_param_example_discussion_sec File Contents

<b> Mixture  </b>:

The system described in the Mixture block of the above example contains 
a mixture of two types of polymers (nPolymer=2) that contain two types 
of monomer (nMonomer=2).  Different types of monomer are labelled by 
integer indices in the range 0,...,nMonomer-1. 

The "monomers" parameter is an array-valued parameter shown above as
\code
     monomers[
                1.0  
                1.0 
     ]
\endcode
The value of each element in the "monomers" array gives the monomer 
statistical segment length for a monomer type, listed in order of 
increasing monomer type index.  

The Mixture block in this examnple contains two "Polymer" subblocks.
Each "Polymer" subblock describes a polymer molecular species. The 
first species in this system is a diblock copolymer (nBlock=2) 
containing blocks with monomers of types 0 and 1. The second is a 
homopolymer (nBlock=1) with monomers of type 0.  The system described 
in this file contains 60% of diblock copolymer by volume (phi = 0.6 in 
the first Polymer block) and 40% homopolymer by volume (phi= 0.4 for 
in second such block). The diblock copolymer is a symmetric copolymer 
in which each block has a length of 0.5. The homopolymer has a single 
block of length 1.0.

Each element of the "blocks" array within each Polymer subblock 
contains information associated with one block of a block polymer.  
The syntax used in this example for each is designed for the simple case 
of a linear block polymers, which is the default polymer topology.  In 
the case of a linear polymer, each element of the blocks array contains 
the integer id for the type of monomer in that block followed by the 
length of the block, which is given as a real number.  A more complicated 
description of each block is required to describe the connectivity of a
branched polymer, as described \ref user_param_polymer_sec "elsewhere". 

<b> Interaction  </b>:

The chi matrix for this problem has a nonzero value of 10.0 for 
interactions between monomers of types 0 and 1.  The chi matrix is
represented internally as a symmetric square matrix with nMonomer rows 
and columes. Values of diagonal elements (i=j) are usually taken equal 
to zero by convention, though this is not required.  In a system with 
two types of monomer and zero diagonal elements, with this convention, 
only one nonzero chi parameter value is required.  The value of this 
parameter is given here as a line containing "0  1  10.0".

<b> Domain </b>:

The simulation uses a 1D planar geometry, in which variation occurs 
only along one axis of a Cartesian coordinate system.  The block 
labelled Domain contains information about the spatial domain (minimum 
and maximum coordinate values xmin and xmax) and the number of grid 
points (nx = 401 indicates 401 grid points, including both end points).

<b> Domain </b>:

The block labelled Iterator contains a single parameter labelled 
"epsilon". This is a tolerance parameter that is used to decide 
when the SCF equations are solved to within a user-specified accuracy. 
The iterator algorithm used in this example does not require any 
other input parameters.

\section user_param_example_iterator_sec Selection of Iterator Algorithm

All PSCF programs are designed to allow a user to select from a list of 
available iteration algorithms, or to use a default choice.  The default 
iterator algorithm may always be invoked by including a block that starts 
with the generic label "Iterator" before an opening bracket, as done here.  
The default algorithm for the pscf_fd program, which is used in the above 
example, is a Newton-Raphson algorithm that is actually implemented by a 
C++ class named NrIterator.  

When two or more iteration algorithms are available, a non-default 
iteration algorithm may be chosen by replacing the generic "Iterator" 
block label by a label that specifies the name of the class that 
implements the desired algorithm as the first line of the iterator 
block. The rest block that starts with such a line must contain the 
parameters and format required by the specified class or algorithm, 
which is generally different for different algorithms. 

The default choice of iteration algorithm may be invoked either by 
using the generic label "Iterator" or the name of the class that 
implements the default algorithm.  For program pscf_fd, the 
Newton-Raphson iterator may thus be invoked by either using the generic 
name "Iterator" or the specific class name "NRIterator" in the iterator 
block label string.  

For simplicity, almost all of the examples shown in this user manual 
use the default iterator algorithm for each program. Most examples in
this manual thus contain an iterator block that starts with the string 
"Iterator{"  on a line by itself. 

<BR>
\ref user_param_page         (Up) &nbsp; &nbsp; &nbsp; &nbsp; 
\ref user_param_syntax_page (Next) 

*/
