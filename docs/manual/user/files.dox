/*! \page user_files_page Input Files

\ref user_model_page (Prev)
\ref user_usage_page (Next)
<BR>

\section user_files_types_sec Types of File

To perform a typical self-consistent field theory (SCFT) calculation, a
PSCF program generally reads three different types of input file:
<ul>
   <li> a parameter file </li>
   <li> a command file </li>
   <li> a field file </li>
</ul>
All PSCF programs use similar formats for the parameter and command 
files. Several different formats are used for field files.

\section user_files_parameter_sec Parameter file

When any PSCF program is executed, the parameter file is processed first.
The name of the parameter file is specified as command line argument when 
a PSCF program is invoked, as a parameter of the required "-p" command 
line option.  

The parameter file defines the basic parameters of a physical problem of 
interest, and is used to initialize the state of the program.  This file
contains physical information about chemical structures (e.g., monomer 
properties and block polymer chemical structures), the composition of 
the system of interest (the volume fraction or chemical potential of each 
species in a mixture), interactions among the constituents (Flory-Huggins
chi parameters), information about the spatial domain of interest (e.g.,
the Bravai lattice type of a periodic structure), a description of a 
spatial discretization of that domain, and a variety of algorithmic 
parameters. 

The information that must be provided in a parameter file depends somewhat 
on what type of calculation are going to be performed, as dictated by the
commands in the associated command file.  The parameter file for a simple 
SCFT calculation generally contains the following 4 sections:

- Mixture: Description of the structure of all molecular species and
  composition of a mixture
- Interaction: Flory-Huggins interaction parameters
- Domain: Description of a spatial domain or unit cell, and a spatial
  discretization.
- Iterator: Algorithmic parameters used by an iterative SCFT solver

An example of a simple parameter file for the pscf_1d program is shown 
\ref user_param_example_page "here" .

\section user_files_command_sec Command file

The command file is processed after the parameter file, and controls
program flow after initialization.  The command file is a script that
contains a list of commands that are interpreted and executed in the
order they appear.  Each line of a command file starts with a capitalized 
command name, followed by zero or more arguments.  The name of the 
command file that controls a calculation is always specified as a 
required command line argument, as the parameter of the "-c" command 
line option.

Some commands in a command file perform operations that perform file
input and output operations on field data.  For example, the first 
command in a command file for a simple SCFT calculation is usually a 
command to read an initial guess for the monomer chemical potential 
fields from an input field file. The last commands in such a script
are often commands that write the converged chemical potential and 
monomer concentration fields to output files.  The names of these 
input and output field files and various other data files are 
specified as parameters of commands within the command file.

An example of a simple command file for a 1D SCFT calculation performed
with the pscf_1d program is shown \ref user_command_example_sec "here" .

\section user_files_field_sec Field file

A field file contains a description of a set of fields (i.e., functions
of position) that are associated with different monomer types. Several
different field formats are used by different programs in the PSCF 
package. For each program, the same file format or file formats are
used to describe both monomer chemical potential fields and monomer
volume fraction fields.  The command file for every SCFT and FTS 
calculation generally includes a command that reads an input file 
containing an initial set of chemical potential fields.  

<BR>
\ref user_model_page (Prev)
\ref user_page (Up) &nbsp; &nbsp; &nbsp; &nbsp;
\ref user_usage_page (Next)

*/
