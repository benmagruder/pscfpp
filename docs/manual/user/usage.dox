/*! \page user_usage_page Running a Program

\ref user_files_page (Prev) &nbsp; &nbsp; &nbsp; &nbsp;
\ref user_param_page (Next)
<BR>


All of the PSCF programs are designed to be run from a unix command line,
and all have a similar command line interface. The names of the parameter
and command files required to perform a computation are passed to the the
program as arguments of the "-p" and "-c" command line options, respectively.
Names of other input and output files are provided as arguments to commands
in the command file.

\section user_param_usage_example_sec Example

As an example, consider use of the program pscf_pc3, which is used to
model three-dimensional periodic microstructures.  To run this program
using a parameter file named "param" and command file named "commands"
that are both in the current working directory, one would enter:
\code
   pscf_pc3 -p param -c commands
\endcode
The analagous command to invoke a different PSCF program would use a 
different executable name (e.g., pscf_fd to run the program for
one-dimensional finite-difference calculations) but identical command
line options.

During execution, some log information is written to standard output,
which outputs to a terminal by default. This log output can be re-directed
to a file by using the unix ">" output redirect operator. For example,
the command
\code
  pscf_pc3 -p param -c commands > log
\endcode
would direct standard output to a file named "log" in the current working
directory.  Standard output should normally be redirected to a file when
a job is run in background or in a queue.

\section user_param_usage_echo_sec Echoing the Parameter File

All PSCF programs accept a command line option "-e" that causes the
contents of each line of the parameter file to be echoed to standard
output while the parameter file is being read. For example, to invoke
the program pscf_pc3 with echoing of the parameter file to a log file,
one could enter
\code
   pscf_pc3 -e -p param -c commands > log
\endcode
The "echo" option is very useful for locating errors in the parameter 
file.  When an error is detected while reading a parameter file, the 
echoed output ends immediately before the line at which the error is 
detected, and is followed by an error message with any avaiable 
information about the nature of the error.

PSCF parameter files are fixed-format files in which every element is 
preceded by a label string that gives the name of a parameter or a block 
of parameters. During processing of the parameter file, the program reads 
each such label and compares it to a label that it expects to appear next 
in the file. Error messages that are generated in response to parameter 
file syntax errors output both the expected label string and the label 
string that was actually read from file. This error message is usually 
enough to allow a user to identify and fix such an error.

\section user_param_usage_options_sec Command Line Options 

All PSCF programs can be invoked with any of the following command line
options listed in the table shown below. 
<table>
  <tr> 
     <td> <b> Option </b> </td>
     <td> <b> Argument </b> </td>
     <td> <b> Description </b> </td>
  </tr>
  <tr> 
     <td> -e </td> 
     <td>    </td>
     <td> Activates echoing of the parameter file to standard output </td>
  </tr>
  <tr> 
     <td> -p </td>
     <td> filename </td>
     <td> Gives the filename of the parameter file (required) </td>
  </tr>
  <tr> 
     <td> -c </td>
     <td> filename </td>
     <td> Gives the filename of the command file  (required) </td>
  </tr>
  <tr> 
     <td> -i </td>
     <td> prefix </td>
     <td> Specifies a prefix string that will be prepended to the
          names paths all input data files </td>
  </tr>
  <tr> 
     <td> -o </td>
     <td> prefix </td>
     <td> Specifies a prefix string that will be prepended to the 
          the names (paths) for all output data files </td>
  </tr>
</table>
Only the -p and -c options are required, while others may be omitted.
The blank entry in the argument column for the -e option indicates 
that this option does not take an argument. The "prefix" arguments of 
the -i and -o options can be paths to directories that end in directory
separator characters, such as "in/" or "out/", in order to place all
input or output files in specified directories. These prefixes are
prepended to names of input and output files whose names are given in 
the command file, but are not added to the names of the parameter and
command files. 

<em> Example </em>:
The command
\code
   pscf_pc3 -e -p param -c commands -i in/ -o out/ > log
\endcode
would run the program pscf_pc3 using a parameter file named "param" and
a command file named "commands", while echoing the parameter file during
initialization, and reading all input files from subdirectory "in/" and
writing all output files to subdirectory "out/". 

<BR>
\ref user_files_page (Prev) &nbsp; &nbsp; &nbsp; &nbsp;
\ref user_page (Up) &nbsp; &nbsp; &nbsp; &nbsp;
\ref user_param_page (Next)

*/
