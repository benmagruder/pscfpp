
/*! \page about_page About

\ref install_page  (Next)
<BR>

\section about_pscf_sec About PSCF

PSCF is a package of software for solving the Edwards-Helfand
self-consistent theory (SCFT) for polymer liquids. The acronym PSCF stands 
for "polymer self-consistent field".  The version presented here is written 
primarily in C++, with some CUDA code for programs that make use of 
Nvidia graphics processing units (GPUs).  The source code for PSCF is 
maintained in the github repository
<a href=https://github.com/dmorse/pscfpp/>https://github.com/dmorse/pscfpp</a>.

\section about_history_sec History

The current C++ version of PSCF is intended to supersede an older 
Fortran program of the same name. This older Fortran version of PSCF is 
maintained in a separate github.com repository at
<a href= https://github.com/dmorse/pscf/>https://github.com/dmorse/pscf</a> .
The current C++ version provides almost all of the capabilities of the 
older Fortran program, and some significant new capabilities, as 
discussed below.

Differences between the current C++ version of PSCF and the older Fortran
program and some expected advantages of the new code include:
<ul>
  <li>
  The current version is written as an extensible package that contains
  several different programs designed for use with different geometries,
  boundary conditions, algorithms or hardware, implemented within a
  common framework.
  </li>
  <li>
  The current version enables simulations of mixtures containing acyclic
  branched copolymers, in addition to the linear block polymers and 
  linear homopolymers allowed by the Fortran PSCF code.
  </li>
  <li>
  Use of graphics processing units (GPUs) to accelerate some programs.
  </li>
</ul>

\section about_programs_sec Programs

The PSCF package currently contains the following executable programs
and groups of programs:

   - <b> pscf_fd </b> : A one-dimensional finite difference program.

   - <b> pscf_pc </b>: CPU programs for periodic structures that are 
     periodic in 1, 2, or 3 coordinates.

   - <b> pscf_pg </b>: GPU accelerated programs for period microstructures 
     in 1, 2 or 3 dimensions.

Comments:

<b> pscf_fd </b>: This one-dimensional finite-difference program is 
designed to treat problems that vary in only one spatial coordinate, in
Cartesian, cylindrical or spherical coordinates. It is useful for treating
flat or curved interfaces, as well as spherical or cylindrical micelles.
The suffix "fd" in the executable name pscf_fd stands for "finite 
difference".

<b> pscf_pc </b>:
These programs use a psuedo-spectral algorithm to simulate periodic 
microstructures on conventional CPU hardware, thus reproducing and
extending the capabilities of the older Fortran PSCF program.  In the
current version, different executable programs named pscf_pc1, pscf_pc2 
and pscf_pc3 are used to solve problems that are periodic in 1, 2 or 3 
spatial dimensions, respectively. Here, "pc" stands for "periodic CPU".

<b> pscf_pg </b>:
The GPU-accelerated programs for periodic structures are closely 
analogous to the corresponding CPU programs, and provide almost identical 
features, at higher speed.  The GPU accelerated programs for solving 1, 2 
and 3 dimensionally periodic structures are named pscf_pg1, pscf_pg2 and 
pscf_pg3, respectively, where "pg" stands for "periodic GPU".

\section about_features_sec Features

All PSCF programs are designed to treat an incompressible mixture of one
or more block polymers or homopolymer species with zero or more small 
molecule (point-particle) solvents species. All polymeric species are 
treated using the standard Gaussian model of each polymer block as a 
continuous random walk.

Features that are common to all of the PSCF programs include:

  - Mixtures may contain any number of block polymers, homopolymers, and 
    solvent species

  - Polymers may be arbitrarily complex acyclic branched block polymers, 
    as well as linear polymers

  - Canonical, grand-canonical or mixed statistical ensembles -
    users may specify either a volume fraction or a chemical potential
    for each species

  - Efficient simulation of sequences of states along paths in parameter
    space ("sweeps")

  - Efficient Anderson-mixing iteration algorithms

  - A variety of examples, with complete input files

  - Thorough user and developer documentation

  - Open source code 

Features specific to pscf_pc and pscf_pg programs for periodic structures 
include:

  - Ordered phases with 1, 2 or 3 dimensional periodicity

  - All 2D and 3D lattice systems (i.e., orthorhombic, monoclinic, etc.).

  - Automatic optimization of unit parameters to minimize free energy

  - Imposition of any user-selected space-group symmetry

  - Built-in "database" of all 230 3D space groups and 17 2D plane groups

  - Accurate pseudo-spectral solution of the modified diffusion equation

  - Availability of a companion package 
    <a href=https://github.com/kdorfmanUMN/polymer_visual/>Polymer Visual</a> 
    for visualization of periodic structures.

Features specific to the pscf_pc CPU programs for periodic structures are:

  - Inhomogeneous density constraints (a "mask")

  - External fields

  - Thin polymer films

The mask and external field features are used in the pscf_pc programs to 
implement simulations of thin films. A mask is used to constrain a polymer 
material to a slit within a periodic supercell, and external fields are
used represent selective interactions of different monomer types with the 
top and bottom surfaces.

\section about_repo_sec Cloning the Source Code

The PSCF C++ package is currently only provided in source code form.
The source code may be obtained by using a git version control system
client to clone the github source code repository. To do so on a machine
with a git client installed, enter the command:
\code
git clone --recursive https://github.com/dmorse/pscfpp.git
\endcode
Note the use of the --recursive option to the git clone command. This is 
necessary to clone several git submodules that are maintained in separate 
github repositories. This command will create a new directory called 
pscfpp/ that contains all of the source code and associated documentation, 
including all required git submodules.

We do not recommend that users obtain the source code by instead 
downloading a zip or tar file from the PSCF github repository, because 
this file will not contain source code for the other git repositories 
that are automatically downloaded and installed as submodules by the 
above git command.

\section about_documentation_sec Documentation

Documentation is provided as an html web manual that contains both user 
and developer documentation. An online copy of the documentation of a 
recent major release is available online at 
<a ref=https://dmorse.github.io/pscfpp-man/>
https://dmorse.github.io/pscfpp-man </a>.

The PSCF source code repository contains all of the files from which 
the web manual is generated. This makes it possible for users to 
generate a local copy of the manual on their own computer. The web 
manual is created using the doxygen documentation utility. In order to 
generate a local copy of the documentation, doxygen must be installed 
on your computer, and the directory containing the doxygen executable 
must be in your unix command search PATH.

To generate documentation, change directory (cd) to the pscfpp/ root
directory and then enter
\code
   > make html
\endcode
This should create many html files in the pscfpp/docs/html directory.
To begin reading the documentation, point a browser at the file
pscfpp/docs/html/index.html, which contains the main page of this
web manual.

Formatting of some mathematical expressions within this web manual 
relies on the use of a MathJax interpreter that is provided by a 
remote server, and which thus requires an internet connection to 
function. Mathematical expressions in local copies of this manual
will thus be formatted correctly only if the computer is connected 
to the internet.

\section about_dependencies_sec Dependencies

The PSCF source code is written using C++ as the primary language, with
CUDA used in some programs for GPU kernels.  PSCF was developed on
linux and and Mac OS X operating systems using standard unix utilities, 
and is designed to be compiled and run in these or other unix-like 
environments. 

The CPU-based programs within the PSCF package depend on the following
external libraries:

  - Gnu scientific library (GSL)

  - FFTW fast Fourier transform library

The one-dimensional finite difference program pscf_fd requires only GSL,
and not FFTW. The pscf_pc CPU-based programs for spatially periodic
structures require both GSL and FFTW.

The GPU-accelerated pscf_pg programs can only run on a computer with an
appropriate Nvidia GPU. To compile or run these programs, the system must
also have an Nvidia CUDA development environment that provides the cuFFT
gpu-accelerated fast Fourier transform library.

Complete directions for compiling and installing PSCF are provided in
\ref install_page "section 2" of this manual. These include instructions
for installing the dependencies listed above in several operating
system environments using several common package managers.

\section about_license_sec License

The C++/CUDA version of PSCF is free, open source software. It is
distributed under the terms of the GNU General Public License as (GPL)
published by the Free Software Foundation, either version 3 of the
License or (at your option) any later version.  PSCF is distributed
without any warranty, without even the implied warranty of merchantability
or fitness for a particular purpose.  See the LICENSE file or the
<a href=http://www.gnu.org/licenses/>gnu web page</a> for details.


\section about_support_sec Support

Development of PSCF is supported by the National Science Foundation
program for Cyberinfrastructure for Sustained Scientific Development
(CSSI) under Grant No. 2103627.

\section about_contributors_sec Contributors

- David Morse
- Guo Kang Cheong
- Anshul Chawla
- Ryan Collanton
- Ben Magruder
- Kexin Chen

<BR>
\ref index "Main Page"  (Up) &nbsp; &nbsp; &nbsp; &nbsp;
\ref install_page  (Next)

*/
