
/*! \page about_page 1 About

\ref install_page  (Next)  
<BR>

\section about_pscf_sec About PSCF

PSCF is a package of software for solving the Edwards-Helfand 
self-consistent theory for polymer liquids. The version presented here is
written primarily in C++, with some CUDA code for programs that can run 
on Nvidia graphics processing units (GPUs). 
The source code for PSCF is maintained in the github repository
<a href=https://github.com/dmorse/pscfpp/>https://github.com/dmorse/pscfpp</a>.

This C++/CUDA version of PSCF is intended to supersede an older Fortran
program of the same name. The older Fortran PSCF program is maintained 
in a separate github.com repository at
<a href= https://github.com/dmorse/pscf/>https://github.com/dmorse/pscf</a> 
for details.
This new code currently provides almost all of the capabilities of the 
older Fortran program, and many new capabilities, as discussed below.

Differences between the C++/CUDA version of PSCF and the older Fortran 
program, and expected advantages of the new code include:
<ul>
  <li>
  The new version of PSCF is written as an extensible package that 
  contains several different programs designed for use with different 
  geometries, boundary conditions, algorithms or hardware, implemented 
  within a common framework. 
  </li>
  <li>
  The new code enables simulations of mixtures containing arbitrary 
  acyclic branched copolymers, in addition to the linear block 
  polymers and linear homopolymers allowed by the Fortran PSCF code.
  </li>
  <li>
  Adoption of C/C++ as a base language has simplified implementation 
  of variant that that uses graphical process units (GPUs).
  </li>
</ul>

\section about_programs_sec Programs and Features

Currently, the package contains the following programs:

   - A one-dimensional finite difference program for problems that 
     involve variation in a single spatial coordinate in Cartesian, 
     cylindrical or spherical coordinates.

   - CPU-based program for periodic microstructures that are periodic 
     in 1, 2, or 3 coordinates.

   - Analogous GPU accelerated programs for period microstructures in 
     1, 2 or 3 dimensions.

The one-dimensional finite difference program is useful for treating 
problems involving flat or curved interfaces, as well as cylindrical or 
spherical copolymer micelles. The executable for this program is named 
pscf_fd. The suffix "fd" stands for "finite difference".

The pseudo-spectral CPU programs for periodic microstructures are closely
analogous to the older PSCF Fortran program, and provide similar capabilties
and performance.  Different executable files are used in the new code to 
solve 1, 2 and 3 dimensionally periodic structures, which are named 
pscf_pc1, pscf_pc2 and pscf_pc3, respectively. Here, "pc" stands for 
"periodic CPU".  Like the older Fortran program, these programs allows 
the user to search for a solution with any specified crystal system type 
and space group symmetry, and provide efficient algorithms to relax the 
unit cell parameters so as to minimize the free energy. 
 
The GPU-accelerated pseudo-spectral programs for periodic structures is 
based on algorithms similar to those used in the CPU pseudo-spectral 
programs, and provide almost identical capabilities.  The GPU accelerated 
programs for solving 1, 2 and 3 dimensionally periodic structures are 
named pscf_pg1, pscf_pg2 and pscf_pg3, respectively, where "pg" stands 
for "periodic GPU". The main difference between the CPU and GPU codes
for periodic structures is simply that the GPU accelerated codes run
much faster.

All PSCF programs are designed to treat an incompressible mixture of 
linear or acyclic branched block polymers, linear homopolymers and 
small molecule (point-particle) solvents species. All polymeric species
are treated using the standard Gaussian model of a polymer as a 
continuous random walk. PSCF programs allow the use of a closed 
(canonical) ensemble in which a volume fraction is specified for each 
component, an open (grand-canonical) ensemble in which a chemical 
potential is specified for each component, or mixed ensembles in which 
some components are assigned volume fractions and others are assigned 
chemical potentials. 

\section about_repo_sec Coning the Source Code 

The source code may be obtained by using a git version control system 
client to clone the PSCF github repository. To do so on a machine with 
a git client installed, enter the command:
\code
git clone --recursive https://github.com/dmorse/pscfpp.git
\endcode
Note the use of the --recursive option to the git clone command. This
is necessary to clone several git submodules that are maintained in 
separate repositories. This command will create a new directory called 
pscfpp/ that contains all of the source code and associated 
documentation, including all required git submodules.

\section about_documentation_sec Documentation

PSCF is distributed with source files for generating an html web manual. 
An online copy of the documentation of a recent version of this manual 
is available online at 
<a ref=https://dmorse.github.io/pscfpp-man/>
https://dmorse.github.io/pscfpp-man </a>.
After cloning the source code, you can use the doxygen documentation
generation utility to generate a local copy of this documentation. 
To do so, doxygen must be installed on your computer, and the 
directory containing the doxygen executable must be in your command 
search PATH. 

To generate documentation, change directory (cd) to the pscfpp/ root directory
and enter
\code
   > make html
\endcode
This should create many html files in the pscfpp/docs/html directory.  

To begin reading the documentation, point a browser at the file 
pscfpp/docs/html/index.html. This page contains the main page of the 
manual you are reading now. 

\section about_dependencies_sec Dependencies

The PSCF source code is written using C++ as the primary language, with
CUDA used in some programs for GPU acceleration. PSCF is only provided 
in source file format - all programs must be compiled from source.
This package was developed on linux and and Mac OS X operating systems 
using standard unix utilities, and is designed to run on these or other 
unix-like systems. 

To compile and run this or other unix software on Mac OS X, you must 
first install the unix command line tools. These tools are provided as 
part of the much larger XCode Mac development environment, but can also 
be installed separately.

The CPU-based programs within the PSCF package depend on the following 
external libraries:

  - Gnu scientific library (GSL)

  - FFTW fast Fourier transform library

The one-dimensional finite difference program pscf_fd requires only GSL, 
and not FFTW. The pscf_pc CPU-based programs for spatially periodic 
structures require both GSL and FFTW.

The GPU-accelerated pscf_pg programs can only run on a computer with an
appropriate NVIDIA GPU. To compile or run these programs, the system must 
also have an NVIDIA CUDA development environment that provides the CUFFT 
fast Fourier transform library. 

Procedures for installing these dependencies are different for 
different operating system environments and different package managers. 
Instructions for some common environments are given in the web manual.

Complete directions for compiling and installing PSCF are provided in 
section 2 of the html documentation. 

\section about_license_sec License

The C++/CUDA version of PSCF is free, open source software. It is 
distributed under the terms of the GNU General Public License as (GPL) 
published by the Free Software Foundation, either version 3 of the 
License or (at your option) any later version.  PSCF is distributed 
without any warranty, without even the implied warranty of merchantability 
or fitness for a particular purpose.  See the LICENSE file or the 
<a href=http://www.gnu.org/licenses/>gnu web page</a> for details.

\section about_contributors_sec Contributors

- David Morse
- Guo Kang Cheong
- Anshul Chawla
- Ryan Collanton
- Ben Magruder

<BR>
\ref index "Main Page"  (Up) &nbsp; &nbsp; &nbsp; &nbsp; 
\ref install_page  (Next)

*/
