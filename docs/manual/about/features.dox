/*! \page about_features_page Features

\ref about_programs_page  (Prev)   &nbsp; &nbsp; &nbsp; &nbsp;
\ref about_contributors_page    (Next)
<BR>

Features of PSCF programs are listed below, grouped so as to indicate
the programs and computational methods to which they apply:

* **Common features for SCFT and FTS (all programs):**

  - Ability to treat mixtures containing any number of block polymer 
    and solvent molecular species. Linear homopolymers are treated as 
    a special case of a block polymer with only one block.

  - Ability to treat acyclic branched block polymers of arbitrary
    complexity, as well as linear block polymers

  - Ability to use canonical, grand-canonical or mixed statistical
    ensembles. Users may specify either a volume fraction or a chemical
    potential value for each molecular species

  - Thorough user and developer documentation provided via an integrated
    web manual

  - Well documented open source code written in object oriented C++

  - A library of examples containing input files for many types of 
    calculation

  - Python tools for data analysis and manipulation of input and output
    files

* **Features for SCFT (all programs):**

  - Efficient Anderson-mixing SCFT iteration algorithms

  - Efficient SCFT calculations for sequences of parameter choices along
    a path in parameter space ("sweeps"), using extrapolation to construct
    initial guesses

All features listed below are specific to the pscf_pc and pscf_pg 
programs. Both of these programs are designed for systems with periodic
boundary conditions and provide very similar features. Both can be used 
perform either SCFT or PS-FTS calculations. In SCFT, the periodic 
computational unit cell is usually chosen so as to represent a single 
crystallographic unit cell, whereas in FTS it may represent a larger
region. 

* **Features for SCFT or PS-FTS on periodic systems (pscf_pc and pscf_pg):**

  - Accurate pseudo-spectral solution of the modified diffusion equation
    for a continuous chain using an algorithm that is accurate to 4th 
    order in the contour length step size

  - Periodic unit cells with 1, 2 or 3 dimensional periodicity

  - Unit cells with all possible 2D and 3D Bravais lattice systems 
    (i.e., cubic, orthorhombic, monoclinic, etc.) 

  - A companion matlab package
    [Polymer Visual](<https://github.com/kdorfmanUMN/polymer_visual/>)
    for visualization of structures with periodic boundary conditions

* **Features for SCFT on periodic systems (pscf_pc and pscf_pg):**

  - Efficient algorithms to optimize unit cell parameters in SCFT so as
    to minimize free energy density

  - Imposition of any user-selected space-group symmetry on SCFT solutions

  - Built-in database of symmetry operations for all 230 3D space groups
    and 17 2D plane groups for use in SCFT

  - Inhomogeneous density constraints (a "mask")

  - External fields

  - Thin polymer films (implemented using a mask and external fields)

* **Features for PS-FTS (pscf_pc and pscf_pg):**

  - Brownian dynamics (BD) and Monte Carlo (MC) sampling 

  - BD algorithms: Leimkuhler-Matthews and predictor-corrector step
    algorithms

  - MC move algorithms: real-space and "smart"/force-bias moves 

  - Efficient algorithms for adjusting the pressure field so as to 
    find a partial saddle-point (i.e., to impose incompressibility)

  - Tools for calculation of free energy differences by thermodynamic 
    integration, including the Einstein-crystal integration method

  - Parameter "ramps" in which one or more parameters change continuously
    during a simulation, which can be used for continuous thermodynamic 
    integration

  - "Analyzer" classes to compute and analyze quantities of physical
    interest, including the structure factor, order parameters used 
    to identify phase transitions, and derivatives of the Hamiltonian
    needed to for thermodynamic integration calculations

  - Data analysis tools that can applied either during a simulation
    (on-the-fly) or by reading and analyzing field trajectory files 
    that are created during a simulation (postprocessing).

<BR>
\ref about_programs_page  (Prev) &nbsp; &nbsp; &nbsp; &nbsp;
\ref about_page           (Up)  &nbsp; &nbsp; &nbsp; &nbsp;
\ref about_contributors_page    (Next)

*/
